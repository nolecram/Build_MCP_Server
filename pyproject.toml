[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "playwright-mcp-server"
version = "0.1.0"
description = "A Model Context Protocol server for Playwright browser automation"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
authors = [
    {name = "Build MCP Server", email = "build@mcp.server"},
]
keywords = ["mcp", "playwright", "browser", "automation"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "mcp>=1.0.0",
    "playwright>=1.40.0",
    "asyncio-mqtt>=0.16.0",
    "pydantic>=2.0.0",
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-playwright>=0.4.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]

[project.scripts]
playwright-mcp-server = "playwright_mcp_server.main:main"

[project.urls]
Homepage = "https://github.com/nolecram/Build_MCP_Server"
Repository = "https://github.com/nolecram/Build_MCP_Server"
Issues = "https://github.com/nolecram/Build_MCP_Server/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/playwright_mcp_server"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/LICENSE",
]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"